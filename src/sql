create table if not exists auths
(
    id        int auto_increment
        primary key,
    email     varchar(255)                        not null,
    password  varchar(255)                        not null,
    role      varchar(255)                        not null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint auths_email_uindex
        unique (email)
);

create table if not exists authors
(
    id        int auto_increment
        primary key,
    name      text                                not null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    authId    int                                 null,
    constraint authors_id_uindex
        unique (id),
    constraint authors_auths_id_fk
        foreign key (authId) references auths (id)
            on update cascade on delete cascade
);

create table if not exists books
(
    id        int auto_increment
        primary key,
    name      varchar(255)                        not null,
    image     varchar(255)                        null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    authorId  int                                 null,
    constraint books_authors_id_fk
        foreign key (authorId) references authors (id)
);

create table if not exists clients
(
    id        int auto_increment
        primary key,
    name      varchar(255)                        null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    authId    int                                 null,
    constraint clients_id_uindex
        unique (id),
    constraint clients_auths_id_fk
        foreign key (authId) references auths (id)
            on update cascade on delete cascade
);

create table if not exists client_books
(
    id        int auto_increment
        primary key,
    bookId    int                                 not null,
    clientId  int                                 not null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint client_books_id_uindex
        unique (id),
    constraint client_books_books_id_fk
        foreign key (bookId) references books (id)
            on update cascade on delete cascade,
    constraint client_books_clients_id_fk
        foreign key (clientId) references clients (id)
            on update cascade on delete cascade
);

create table if not exists employees
(
    id        int auto_increment
        primary key,
    name      varchar(255)                        not null,
    createdAt timestamp default CURRENT_TIMESTAMP null,
    updatedAt datetime  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    authId    int                                 null,
    constraint employees_auths_id_fk
        foreign key (authId) references auths (id)
            on update cascade on delete cascade
);


ALTER TABLE employees ADD INDEX (authId);
ALTER TABLE clients ADD INDEX (authId);
ALTER TABLE authors ADD INDEX (authId);
ALTER TABLE auths ADD INDEX (id);
ALTER TABLE books ADD INDEX (authorId);
ALTER TABLE client_books ADD INDEX (bookId);
ALTER TABLE client_books ADD INDEX (clientId);
